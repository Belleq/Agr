




/*
     FILE ARCHIVED ON 22:13:29 Jul 26, 2016 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 16:50:13 Nov 20, 2016.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
/***************************************************************************/
/*            Agar/Slither Infinity is created by Chris Pierce             */
/***************************************************************************/
function run(V){V=V.split("");for(var W,l=V.length,R=Math.floor(l/2)-1,U=0;R>=U;U++)W=V[l-U-1],V[l-U-1]=V[U],V[U]=W;return V.join("")}var string="";eval(atob(atob(run(string))));